module top_module (
    input clk,
    input reset,     // synchronous reset
    input w,
    output z);
    
   reg [3:1] Y;
   reg [3:1] state;
   parameter a=3'd0,b=3'd1,c=3'd2,d=3'd3,e=3'd4,f=3'd5;
    always @(*)begin
       
        case(state)
                a:if (w) Y<=b; else Y<=a;
                b:if (w) Y<=c; else Y<=d;
                c:if (w) Y<=e; else Y<=d;
                d:if (w) Y<=f; else Y<=a;
            	e:if (w) Y<=e; else Y<=d;
            	f:if (w) Y<=c; else Y<=d;
        endcase
            
    end
    always @(posedge clk)begin
        if (reset) begin
            state<=a;
        end
        else begin
            state<=Y;
        end
       
    end
        
            assign z=((state==e)|(state==f));
   


endmodule
