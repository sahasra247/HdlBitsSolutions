module top_module(
    input clk,
    input reset,    // Synchronous reset
    input in,
    output disc,
    output flag,
    output err);
    reg [3:0] state;
    parameter s1=4'd1,s2=4'd2,s3=4'd3,s4=4'd4,s5=4'd5,s6=4'd6,s7=4'd7,s8=4'd8,s9=4'd9,s10=4'd10,s11=4'd11;
    always @(posedge clk) begin
        if (reset) begin
            state<=s1;
        end
        else begin
            case(state)
                s1:if (in) state<=s2;else state<=s1;
                s2:if (in) state<=s3;else state<=s1;
                s3:if (in) state<=s4;else state<=s1;
                s4:if (in) state<=s5;else state<=s1;
                s5:if (in) state<=s6;else state<=s1;
                s6:if (in) state<=s9;else state<=s7;
             	s7:if (in) state<=s2;else state<=s1;
                s9:if (in) state<=s11;else state<=s10;
              	s10:if (in) state<=s2;else state<=s1;
                s11:if (in) state<=s11;else state<=s1;
            endcase
                
                
                
                
    end
    end
    assign disc=(state==s7);
    assign flag=(state==s10);
    assign err=(state==s11);

endmodule
