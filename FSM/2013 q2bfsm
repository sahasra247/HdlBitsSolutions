module top_module (
    input clk,
    input resetn,    // active-low synchronous reset
    input x,
    input y,
    output f,
    output g
); 
    reg [3:0] state;
    parameter s0=4'd0,s1=4'd1,s2=4'd2,s3=4'd3,s4=4'd4,s5=4'd5,s6=4'd6,s7=4'd7,s8=4'd8;
    always @(posedge clk) begin
        if(!resetn) state<=s0;
        else begin
            case(state)
                s0:state<=s1;
                s1:state<=s2;
                s2:if (x) state<=s3; else state<=s2;
                s3:if (x) state<=s3; else state<=s4;
                s4:if (x) state<=s6; else state<=s2;
                s6:if (y) state<=s5; else state<=s7;
                s5:state<=s5;
                s7:if (y) state<=s5; else state<=s8;
                s8:state<=s8;
            endcase
        end
    end
    assign f=(state==s1);
    assign g=(state==s6|state==s7|state==s5);
    
         

endmodule