FSM PS2DATA:
module top_module(
    input clk,
    input [7:0] in,
    input reset,    // Synchronous reset
    output [23:0] out_bytes,
    output done); //
    reg [1:0] state;
    reg [1:0] next_state;
    parameter S0=2'd0,S1=2'd1,S2=2'd2,S3=2'd3;
    always @(*) begin
        case(state)
            S0:next_state=(in[3])?S1:S0;
            S1:next_state=S2;
            S2:next_state=S3;
            S3:next_state=(in[3])?S1:S0;
        endcase
    end
    
    always @(posedge clk) begin
        if(reset) begin
            state<=S0;
        end
        else begin
            state<=next_state;
            case(state)
                S0:if (in[3]) begin
                    out_bytes[23:16]<=in;
                end
                S1:out_bytes[15:8]<=in;
                S2:out_bytes[7:0]<=in;
                S3:if (in[3]) begin
                    out_bytes[23:16]<=in;
                end
            endcase
       end
    end
    assign done=(state==S3);
endmodule
